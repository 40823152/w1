var tipuesearch = {"pages": [{'title': 'About', 'text': '四設計四甲 \n 40823152 | 黃暐翰 \n replit\xa0 \xa0 :\xa0 url \n \n github\xa0 :\xa0 url \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'w15', 'text': '\n', 'tags': '', 'url': 'w15.html'}, {'title': 'Github_new_repository', 'text': '\n Github -> New(Top Respositorie) -> Repository name -> create\xa0 \xa0repository \n \n \n github repository \n git init\ngit add README.md\ngit commit -m "first commit"\ngit branch -M main\ngit remote add origin https://github.com/40823152/w15.git\ngit push -u origin main \n \n \n \n To create a new repository on GitHub, follow these steps: \n \n \n Sign in to your GitHub account. If you don\'t have an account, you can create one for free at  https://github.com/join . \n \n \n Once signed in, click on the "+" button in the top-right corner of the GitHub interface. A dropdown menu will appear. \n \n \n From the dropdown menu, select "New repository." You will be taken to the "Create a new repository" page. \n \n \n On the "Create a new repository" page, provide the following information: \n \n Repository name: Choose a unique and descriptive name for your repository. \n Description (optional): Add a brief description to help others understand the purpose of your repository. \n Visibility: Choose whether you want your repository to be public (visible to everyone), private (visible only to you and collaborators you specify), or internal (visible to members of your organization). \n Initialize this repository with a README: If you want to include a README file, which is helpful for providing project information, instructions, or documentation, check this option. \n Add .gitignore: If your project requires ignoring certain files or directories (e.g., logs, dependencies, or build artifacts), select the appropriate .gitignore template. \n Choose a license (optional): If you want to specify a license for your repository, choose one from the provided options. \n \n \n \n Once you have filled in the necessary information, click on the "Create repository" button at the bottom of the page. \n \n \n Congratulations! You have successfully created a new repository on GitHub. You can now start adding files, making commits, and collaborating with others on your project. \n \n \n', 'tags': '', 'url': 'Github_new_repository.html'}, {'title': 'replit_new_repository', 'text': '\n Create a Repl ->\xa0 Template \'Python\' ->\xa0Title \'name\'\xa0 ->\xa0Create a Repl \n \n The following image shows the screenshot after successfully creating a repository on Replit. \n \n \n \n To create a new repository on Replit, you can follow these steps: \n \n \n Sign in to your Replit account. If you don\'t have an account, you can create one for free at  https://replit.com/signup . \n \n \n Once signed in, you will be taken to your Replit dashboard. Click on the "+" button in the top-right corner of the interface. A dropdown menu will appear. \n \n \n From the dropdown menu, select "New Repl." You will be taken to the "Create a new repl" page. \n \n \n On the "Create a new repl" page, provide the following information: \n \n Choose a language: Select the programming language you want to use for your repository. Replit supports a wide range of programming languages and frameworks. \n Choose a template (optional): If you want to start with a pre-configured template or framework, you can select one from the provided options. This step is optional, and you can also start with a blank repl. \n Give your repl a name: Choose a unique and descriptive name for your repository. \n \n \n \n Once you have filled in the necessary information, click on the "Create Repl" button at the bottom of the page. \n \n \n Congratulations! You have successfully created a new repository (repl) on Replit. You can now start coding, adding files, and collaborating with others on your project. \n \n', 'tags': '', 'url': 'replit_new_repository.html'}, {'title': 'cmsimde', 'text': '', 'tags': '', 'url': 'cmsimde.html'}, {'title': 'Bython', 'text': '', 'tags': '', 'url': 'Bython.html'}, {'title': '1. Bython reads exam scores', 'text': '\n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n \n 1aw5.txt \n 1aw6.txt \n 1aw6-2.txt \n 1aw8.txt \n 1aw9.txt \n \n \n 1aW5 1aW6 1aW6-2 1aW8  1aW9  \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n', 'tags': '', 'url': '1. Bython reads exam scores.html'}]};